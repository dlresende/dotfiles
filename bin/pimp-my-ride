#!/usr/bin/env bash

[[ -z "$DEEBUG" ]] || set -x

# shellcheck disable=SC1090
lpass show --notes dotfilesrc > ~/.dotfilesrc && source ~/.dotfilesrc

main() {
  configure_homebrew_to_work_with_multiple_accounts
  update_homebrew || install_homebrew
  install_stuff
  configure_vim
  configure_tmux
  install_oh_my_zsh
  configure_go_workspace
}

configure_homebrew_to_work_with_multiple_accounts() {
  # Some tools (like ruby-install) base themselves on the user having installed Homebrew
  # in order to install and configure stuff (by doing: `/usr/bin/stat -f %Su /usr/local/bin/brew`)
  sudo chown -h "$(whoami)" /usr/local/bin/brew

  local homebrew_folders=( "/usr/local/Cellar" "/usr/local/Homebrew" "/usr/local/var/homebrew" "/usr/local/lib" )
  for folder in "${homebrew_folders[@]}"
  do
    sudo chgrp -R admin "$folder"
    sudo chmod -R g=u "$folder"
  done
}

update_homebrew() {
  brew -h > /dev/null 2>&1 && brew update
}

install_homebrew() {
  brew -h > /dev/null 2>&1 || /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
}

install_stuff() {
  brew bundle --global
}

configure_vim() {
  if [[ ! -d "$HOME/.vim" ]] ; then
    git clone https://github.com/luan/vimfiles.git ~/.vim
  fi

  (
    cd "$HOME/.vim" || exit 1
    git checkout master
    git pull -r
    ./update
  )

  pip3 install --user --upgrade neovim # Required by some plugins like deoplate
}

configure_tmux() {
  TMUX_PLUGIN_MANAGER_PATH="$HOME/.tmux/plugins"

  echo "Updating tmux plugins..."
  if [[ ! -d "$TMUX_PLUGIN_MANAGER_PATH/tpm" ]] ; then
    mkdir -p "$TMUX_PLUGIN_MANAGER_PATH"
    git clone https://github.com/tmux-plugins/tpm "$TMUX_PLUGIN_MANAGER_PATH/tpm"
    "$TMUX_PLUGIN_MANAGER_PATH"/tpm/bin/install_plugins
  else
    ( cd "$TMUX_PLUGIN_MANAGER_PATH/tpm" && git pull )
    "$TMUX_PLUGIN_MANAGER_PATH"/tpm/bin/update_plugins all
  fi
}

install_oh_my_zsh() {
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
}

configure_go_workspace() {
  if [[ -L "$HOME"/go/src && -d "$HOME"/go/src ]]
  then
    echo "Go workspace already configured. Moving on."
  fi

  mv "$HOME"/go/src/* "$HOME"/Projects
  rm -fr "$HOME"/go/src
  ln -s "$HOME"/Projects "$HOME"/go/src
}

main
