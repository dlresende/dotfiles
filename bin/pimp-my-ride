#!/usr/bin/env bash

[[ -z "$DEBUG" ]] || set -x

# shellcheck disable=SC1090
lpass show --notes dotfilesrc > ~/.dotfilesrc && source ~/.dotfilesrc

main() {
  configure_env_to_allow_homebrew_to_work_with_multiple_accounts
  configure_ruby
  install_stuff
  configure_vim
  configure_tmux
  install_oh_my_zsh
  configure_go_workspace
}

configure_env_to_allow_homebrew_to_work_with_multiple_accounts() {
  local homebrew_directories=( \
    /usr/local/Cellar	\
    /usr/local/Homebrew	\
    /usr/local/var/homebrew	\
    /usr/local/lib	\
    /usr/local/share	\
    /usr/local/etc	\
    /usr/local/opt \
    /usr/local/Caskroom	\
    /usr/local/bin	\
  )

  for dir in "${homebrew_directories[@]}"
  do
    sudo chown -R -H "$(whoami)" "$dir"
    sudo chown -R "$(whoami)" "$dir"
    sudo chown -h "$(whoami)" "$dir"
  done
}

configure_ruby() {
  rbenv install -s "$(cat ~/.rbenv/version)"
}

update_homebrew() {
  brew -h > /dev/null 2>&1 && brew update
}

install_homebrew() {
  brew -h > /dev/null 2>&1 || /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
}

install_stuff() {
  update_homebrew || install_homebrew

  brew bundle --global
  gem install --no-lock --file "$HOME/.Gemfile"
  python3 -m pip install --user --upgrade pynvim # some neovim plugins like javascript-typescript-langserver need the pynvim module
  npm install -g javascript-typescript-langserver
}

checkout_projects() {
  mkdir -p "$HOME/Projects"

  ( cd "$HOME" || exit 1
    mr update
  )
}

configure_vim() {
  if [[ ! -d "$HOME/.vim" ]] ; then
    git clone https://github.com/dlresende/vimfiles.git ~/.vim
  fi

  pip3 install --user --upgrade neovim # Required by some plugins like deoplate

  ( cd "$HOME/.vim" || exit 1
    make install
  )
}

configure_tmux() {
  TMUX_PLUGIN_MANAGER_PATH="$HOME/.tmux/plugins"

  echo "Updating tmux plugins..."
  if [[ ! -d "$TMUX_PLUGIN_MANAGER_PATH/tpm" ]] ; then
    mkdir -p "$TMUX_PLUGIN_MANAGER_PATH"
    git clone https://github.com/tmux-plugins/tpm "$TMUX_PLUGIN_MANAGER_PATH/tpm"
    "$TMUX_PLUGIN_MANAGER_PATH"/tpm/bin/install_plugins
  else
    ( cd "$TMUX_PLUGIN_MANAGER_PATH/tpm" && git pull )
    "$TMUX_PLUGIN_MANAGER_PATH"/tpm/bin/update_plugins all
  fi
}

install_oh_my_zsh() {
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
}

configure_go_workspace() {
  if [[ -L "$HOME"/go/src && -d "$HOME"/go/src ]]
  then
    echo "Go workspace already configured. Moving on."
  fi

  mv "$HOME"/go/src/* "$HOME"/Projects
  rm -fr "$HOME"/go/src
  ln -s "$HOME"/Projects "$HOME"/go/src
}

main
