#!/usr/bin/env bash

: "${DEBUG:=}"

set -u # fail if we hit unset variables
set -o pipefail # fail if any component of any pipe fails

[[ -z "$DEBUG" ]] || set -x

main() {
  switch_to_bash
  install_stuff
  configure_ruby && check_rbenv
  configure_vim
  configure_tmux
  configure_git
}

switch_to_bash() {
  [ "$SHELL" = '/bin/bash' ] || chsh -s /bin/bash
}

install_stuff() {
  local noise_level

  if [ -z "$DEBUG" ]
  then
    noise_level='--quiet'
  else
    noise_level='--debug'
  fi

  if command -v 'brew' &> /dev/null
  then
    brew update "$noise_level"
  else
    NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  fi

  brew bundle --global "$noise_level"

  npm i -g bash-language-server &&
    npm update -g
}

configure_ruby() {
  rbenv install --list | grep 2.7 > ~/.rbenv/version
  rbenv install -s "$(cat ~/.rbenv/version)"
}

check_rbenv() {
  curl -fsSL https://github.com/rbenv/rbenv-installer/raw/main/bin/rbenv-doctor | bash
}

configure_vim() {
  curl -fsSL https://vimfiles.diegolemos.net/install | bash
}

configure_tmux() {
  TMUX_PLUGIN_MANAGER_PATH="$HOME/.tmux/plugins"

  echo "Updating tmux plugins..."
  if [[ ! -d "$TMUX_PLUGIN_MANAGER_PATH/tpm" ]] ; then
    mkdir -p "$TMUX_PLUGIN_MANAGER_PATH"
    git clone https://github.com/tmux-plugins/tpm "$TMUX_PLUGIN_MANAGER_PATH/tpm"
    "$TMUX_PLUGIN_MANAGER_PATH"/tpm/bin/install_plugins
  else
    ( cd "$TMUX_PLUGIN_MANAGER_PATH/tpm" && git pull )
    "$TMUX_PLUGIN_MANAGER_PATH"/tpm/bin/update_plugins all
  fi
}

configure_go_workspace() {
  if [[ -L "$HOME"/go/src && -d "$HOME"/go/src ]]
  then
    echo "Go workspace already configured. Moving on."
    return
  fi

  mv "$HOME"/go/src/* "$HOME"/Projects
  rm -fr "$HOME"/go/src
  ln -s "$HOME"/Projects "$HOME"/go/src
}

configure_git() {
  git config --global core.excludesfile ~/.gitignore_global
  git config --global pull.rebase false
}

main
